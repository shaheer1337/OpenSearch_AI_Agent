curl -X POST "http://localhost:9200/_plugins/_ml/mcp/tools/_register" \
  -H 'Content-Type: application/json' \
  -d'{
    "tools": [
        {
            "type": "ListIndexTool"
        },
        {
            "type": "IndexMappingTool",
            "attributes": {
                "input_schema": {
                    "type": "object",
                    "properties": {
                        "index": {
                            "type": "array",
                            "description": "Array of index names to get mappings for. Example: [\"my-index\"]"
                        },
                        "question": {
                            "type": "string", 
                            "description": "Natural language question about the index. Example: \"What fields are in this index?\""
                        }
                    },
                    "required": ["index", "question"]
                }
            }
        }
    ]
  }'

  curl -X POST "http://localhost:9200/_plugins/_ml/mcp/tools/_register" \
  -H 'Content-Type: application/json' \
  -d'{
    "tools": [
        {
            "type": "SearchIndexTool",
            "attributes": {
                "input_schema": {
                    "type": "object",
                    "properties": {
                        "input": {
                            "type": "object",
                            "properties": {
                                "index": {
                                    "type": "string",
                                    "description": "OpenSearch index name. Example: firewall-logs-+000000"
                                },
                                "query": {
                                    "type": "object",
                                    "description": "OpenSearch query DSL. Examples: {\"size\": 100} for all docs, {\"size\": 20, \"_source\": \"src_ip\"} for specific field, {\"size\": 10, \"_source\": [\"field1\", \"field2\"]} for multiple fields, {\"size\": 0, \"aggs\": {\"top_terms\": {\"terms\": {\"field\": \"field.keyword\", \"size\": 5}}}} for aggregations. Use _source to filter returned fields.",
                                    "additionalProperties": true
                                }
                            },
                            "required": ["index", "query"]
                        }
                    },
                    "required": ["input"]
                }
            }
        }
    ]
  }'

  curl -X POST "http://localhost:9200/_plugins/_ml/mcp/tools/_register" \
  -H 'Content-Type: application/json' \
  -d'{
    "tools": [
        {
            "type": "WebSearchTool",
            "name": "WebSearchTool",
            "attributes": {
                "input_schema": {
                    "type": "object",
                    "properties": {
                        "engine": {
                            "type": "string",
                            "description": "The search engine to use. Set to duckduckgo.",
                            "default": "duckduckgo"
                        },
                        "query": {
                            "type": "string",
                            "description": "The search query to perform. For example: \"OpenSearch index patterns\""
                        },
                        "next_page": {
                            "type": "string",
                            "description": "The search result\'s next page link. If provided, will fetch the next page of results."
                        }
                    },
                    "required": ["engine", "query"]
                },
                "strict": false
            },
            "parameters": {
                "engine": "duckduckgo"
            }
        }
    ]
}'

curl -X PUT "http://localhost:9200/_cluster/settings" \
  -H 'Content-Type: application/json' \
  -d '{
  "persistent": {
    "plugins.ml_commons.trusted_connector_endpoints_regex": ["http://192\\.168\\.18\\.201:11434.*"]
  }
}'

curl -X POST "http://localhost:9200/_plugins/_ml/connectors/_create" \
  -H 'Content-Type: application/json' \
  -d '{
  "name": "ollama-qwen-connector",
  "description": "Connector for Qwen3:14b on Ollama for PPL translation",
  "version": 1,
  "protocol": "http",
  "credential": {
    "type": "none"
  },
  "parameters": {
    "endpoint": "http://192.168.18.201:11434/api/generate"
  },
  "actions": [
    {
      "action_type": "predict",
      "method": "POST",
      "headers": {
        "content-type": "application/json"
      },
      "url": "${parameters.endpoint}",
      "request_body": "{\"model\":\"qwen3:14b\",\"prompt\":\"${parameters.prompt}\",\"temperature\":0.1,\"stream\":false}",
      "post_process_function": "function process(response) { const json = JSON.parse(response); return json.response; }"
    }
  ]
}'

curl -X POST "http://localhost:9200/_plugins/_ml/mcp/tools/_register" \
  -H 'Content-Type: application/json' \
  -d '{
    "tools": [
        {
            "type": "PPLTool",
            "name": "PPLTool",
            "attributes": {
                "input_schema": {
                    "type": "object",
                    "properties": {
                        "index": {
                            "type": "string",
                            "description": "Index name to run the PPL query against. Example: firewall-logs-+000000"
                        },
                        "question": {
                            "type": "string",
                            "description": "Question in natural language to be translated into a PPL query. Example: Show me the top 10 source IPs by count."
                        },
                        "execute": {
                            "type": "boolean",
                            "description": "Whether to execute the generated PPL query. Default is true.",
                            "default": true
                        }
                    },
                    "required": ["index", "question"]
                }
            },
            "parameters": {
                "model_id": "Model id here",
                "model_type": "REMOTE",
                "prompt": "You are an expert in translating natural language questions into PPL (Piped Processing Language) queries for OpenSearch. PPL is a SQL-like language that uses pipes (|) to chain operations.\n\nTranslate the following question about the ${parameters.index} index into a valid PPL query.\n\nQuestion: ${parameters.question}\n\nRespond ONLY with a valid PPL query that begins with \"source=${parameters.index}\" - provide no explanations or additional text.",
                "execute": "true"
            }
        }
    ]
}'